// current best score: 27123457

#include <stdio.h>
#pragma GCC optimize "Ofast,unroll-loops,vectorize,profile-generate,m64,inline-functions"

long long bases[256] = { 1216,1836,8885,4564,10978,5228,15613,13941,1553,173,3615,3144,10065,9259,233,2362,6244,6431,10863,5920,6408,6841,22124,2290,45597,6935,4835,7652,1051,445,5807,842,1534,22140,1282,1733,347,6311,14081,11157,186,703,9862,15490,1720,17816,10433,49185,2535,9158,2143,2840,664,29074,24924,1035,41482,1065,10189,8417,130,4551,5159,48886,786,1938,1013,2139,7171,2143,16873,188,5555,42007,1045,3891,2853,23642,148,3585,3027,280,3101,9918,6452,2716,855,990,1925,13557,1063,6916,4965,4380,587,3214,1808,1036,6356,8191,6783,14424,6929,1002,840,422,44215,7753,5799,3415,231,2013,8895,2081,883,3855,5577,876,3574,1925,1192,865,7376,12254,5952,2516,20463,186,5411,35353,50898,1084,2127,4305,115,7821,1265,16169,1705,1857,24938,220,3650,1057,482,1690,2718,4309,7496,1515,7972,3763,10954,2817,3430,1423,714,6734,328,2581,2580,10047,2797,155,5951,3817,54850,2173,1318,246,1807,2958,2697,337,4871,2439,736,37112,1226,527,7531,5418,7242,2421,16135,7015,8432,2605,5638,5161,11515,14949,748,5003,9048,4679,1915,7652,9657,660,3054,15469,2910,775,14106,1749,136,2673,61814,5633,1244,2567,4989,1637,1273,11423,7974,7509,6061,531,6608,1088,1627,160,6416,11350,921,306,18117,1238,463,1722,996,3866,6576,6055,130,24080,7331,3922,8632,2706,24108,32374,4237,15302,287,2296,1220,20922,3350,2089,562,11745,163,11951 };

int is_SPRP(int n, long long a) {
	int d = n - 1, s = 0;
	while ((d & 1) == 0) ++s, d >>= 1;

	long long cur = 1, pm = d;
	while (pm)
	{
		if (pm & 1) cur = (cur * a) % n;
		a = a * a % n;
		pm >>= 1;
	}

	if (cur == 1) return 1;
	for (int r = 0; r < s; ++r)
	{
		if (cur == n - 1) return 1;
		cur = (cur * cur) % n;
	}
	return 0;
}

int is_prime(int n) {
	if (n == 2 || n == 3 || n == 5 || n == 7 || n == 11 || n == 13 || n == 17 || n == 19 || n == 23 || n == 29 || n == 31 || n == 37 || n == 41 || n == 43 || n == 47 || n == 53 || n == 59 || n == 61 || n == 67 || n == 71 || n == 73 || n == 79 || n == 83 || n == 89 || n == 97 || n == 101 || n == 103 || n == 107 || n == 109 || n == 113 || n == 127 || n == 131 || n == 137 || n == 139 || n == 149 || n == 151 || n == 157 || n == 163 || n == 167 || n == 173 || n == 179 || n == 181 || n == 191 || n == 193 || n == 197 || n == 199) return 1;
	if ((n & 1) == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 || n % 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 || n % 43 == 0 || n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n % 71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109 == 0 || n % 113 == 0 || n % 127 == 0 || n % 131 == 0 || n % 137 == 0 || n % 139 == 0 || n % 149 == 0 || n % 151 == 0 || n % 157 == 0 || n % 163 == 0 || n % 167 == 0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 191 == 0 || n % 193 == 0 || n % 197 == 0 || n % 199 == 0) return 0;
	if (n < 39601) return n > 1;
	return is_SPRP(n, bases[(0xAD625B89U * (unsigned int) n) >> 24]);
}

int main()
{
	putchar_unlocked('0');
	int a = 1;

	for (int i = 0; i < 25000000; ++i)
	{
		putchar_unlocked(is_prime(a = (a + 1234567890) & 2147483647) + 48);
	}
	return 0;
}
